version: '3'

################################################
# adjacents master docker-compose file
# updated April 2018
# author: Valerie Parham-Thompson

# you probably don't want to start all of these at once with 'docker-compose up -d'
# instead, choose the ones you want, as with 'docker-compose up -d app mysqlprimary mysqlreplica vault proxysql'

networks:
  app_net:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24

services:

################################################
# cassandra
  cassandra:
    container_name: cassandra
    image: cassandra:latest
    hostname: cassandra
    networks:
      app_net:
        ipv4_address: 172.16.238.3
    ports: 
      - "9043:9042"
    volumes:
      - ./configuration/cassandra_new.yaml:/etc/cassandra/cassandra_new.yaml
    command: tail -f /dev/null

################################################
# sysbench-lua
  sysbench:
    container_name: sysbench
    image: dataindataout/sysbench-docker
    hostname: sysbench
    networks:
      app_net:
        ipv4_address: 172.16.238.4
    volumes:
      - ./configuration/benchmark1.lua:/benchmark1.lua
    links:
      - cassandra
    command: tail -f /dev/null

################################################
# operations server; run commands here
  app:
    container_name: app
    image: dataindataout/opsjump
    hostname: app
    command: tail -f /dev/null

################################################
# Datastax DSE server
  dse:
    container_name: dse
    image: dataindataout/opsjump
    hostname: dse
    environment:
      - VAULT_ADDR=http://vault:9200
    volumes:
      - ./DataStaxEnterprise-5.1.7-linux-x64-installer.run:/DataStaxEnterprise-5.1.7-linux-x64-installer.run
    command: tail -f /dev/null

################################################
# oracle mysql community 
# add tags (5.6, 8.0, etc.) on image as needed
# default/latest is currently 8.0
  mysqlprimary:
    container_name: mysqlprimary
    image: dataindataout/mysql
    hostname: mysqlprimary
    ports: 
      - "3301:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
    command: >
        --server-id=1
        --log-bin
        --log-slave-updates=ON
    
  mysqlreplica:
    container_name: mysqlreplica
    image: dataindataout/mysql
    hostname: mysqlreplica
    ports: 
      - "3302:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
    command: >
      --server-id=2
      --read-only=ON
      --log-bin
      --log-slave-updates=ON
    depends_on: 
         - 'mysqlprimary'

################################################
# mariadb + myrocks 
  mariarocksprimary:
    container_name: mariarocksprimary
    image: dataindataout/mariarocks
    hostname: mariarocksprimary
    ports: 
      - "3303:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
    command: >
        --server-id=3
        --log-bin
        --log-slave-updates=ON

  mariarocksreplica:
    container_name: mariarocksreplica
    image: dataindataout/mariarocks
    hostname: mariarocksreplica
    ports: 
      - "3304:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
    command: >
        --server-id=4
        --log-bin
        --log-slave-updates=ON

################################################
# mariadb + tokudb
  mariatokuprimary:
    container_name: mariatokuprimary
    image: dataindataout/mariatoku
    hostname: mariatokuprimary
    ports: 
      - "3305:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
    command: >
        --server-id=5
        --log-bin
        --log-slave-updates=ON

  mariatokureplica:
    container_name: mariatokureplica
    image: dataindataout/mariatoku
    hostname: mariatokureplica
    ports: 
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
    command: >
        --server-id=7
        --log-bin
        --log-slave-updates=ON

################################################
# mariadb 10.3
  mariaprimary:
    container_name: mariaprimary
    image: dataindataout/mariadb:10.3
    hostname: mysqlprimary
    ports: 
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
    command: >
        --server-id=8
        --log-bin
        --log-slave-updates=ON
    
  mariareplica:
    container_name: mariareplica
    image: dataindataout/mariadb:10.3
    hostname: mysqlreplica
    ports: 
      - "3309:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_ROOT_HOST: '%'
    command: >
      --server-id=9
      --read-only=ON
      --log-bin
      --log-slave-updates=ON
    depends_on: 
          - 'mariaprimary'

################################################
# golang build container as needed
# put the code location in the volumes section
# this is currently set up to build https://github.com/dataindataout/vault
  golangbuild:
    container_name: golangbuild
    hostname: golangbuild
    image: golang:alpine
    volumes:
      - ~/localbuildme:/go/src/github.com/hashicorp
    command: tail -f /dev/null



################################################
# MySQL Cluster test cluster
# with 1 management node, 2 data nodes and 1 sql
# node. 


  management1:
    image: mysql/mysql-cluster:7.5
    container_name: management1
    volumes:
      - ./config/mysql-cluster.cnf:/etc/mysql-cluster.cnf
      - ./config/my.cnf:/etc/my.cnf
    command: ndb_mgmd
    depends_on:
      - ndb1
      - ndb2
      - mysql1

  ndb1:
    image: mysql/mysql-cluster:7.5
    container_name: ndb1
    volumes:
      - ./config/mysql-cluster.cnf:/etc/mysql-cluster.cnf
      - ./config/my.cnf:/etc/my.cnf
    command: ndbmtd

  ndb2:
   image: mysql/mysql-cluster:7.5 
   container_name: ndb2
   volumes:
      - ./config/mysql-cluster.cnf:/etc/mysql-cluster.cnf
      - ./config/my.cnf:/etc/my.cnf
   command: ndbmtd

  mysql1:
   image: mysql/mysql-cluster:7.5
   container_name: mysql1
   volumes:
      - ./config/mysql-cluster.cnf:/etc/mysql-cluster.cnf
      - ./config/my.cnf:/etc/my.cnf
   command: mysqld



